package com.acme.scriptrunner.scripts
import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.issue.CustomFieldManager
import com.atlassian.jira.issue.ModifiedValue
import com.atlassian.jira.issue.util.DefaultIssueChangeHolder
import com.atlassian.jira.issue.fields.CustomField
import com.atlassian.jira.issue.Issue
import com.atlassian.jira.issue.IssueManager
import com.atlassian.jira.issue.MutableIssue
import com.atlassian.jira.issue.IssueInputParameters
import com.atlassian.jira.issue.customfields.manager.OptionsManager
import com.atlassian.jira.issue.context.IssueContext

final searchQuery = "project = PPN AND Increment_de_developpement is not empty"

if (searchQuery){
    def customFieldName = "Engagement_PI"
    def custom = "Increment_de_developpement"
	def CustomFieldManager = ComponentAccessor.customFieldManager
	def optionsManager = ComponentAccessor.optionsManager
    def changeHolder = new DefaultIssueChangeHolder()
    
    def customField = customFieldManager.getCustomFieldObjects(issue).findByName(customFieldName) 
	assert customField : "Could not find custom field with name $customFieldName"
   	def customField2 = customFieldManager.getCustomFieldObjects(issue).findByName(custom)
	assert CustomField : "Could not find custom field with name $custom"
    
    issueInputParameters.setComment("L'incrément de développement est copier dans Engagement PI")
	customField.updateValue(null, issue, new ModifiedValue(issue.getCustomFieldValue(customField), issue.getCustomFieldValue(customField2)), changeHolder)
	
}
